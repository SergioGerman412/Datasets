from mrjob.job import MRJob
from mrjob.protocol import TextProtocol

class MediaGastadoPersonaTienda(MRJob):

    OUTPUT_PROTOCOL = TextProtocol

    def mapper(self, _, line):
        persona, gasto = line.split('\t')
        yield persona, (float(gasto), 1)

    def combiner(self, persona, values):
        total_gasto, count = 0, 0
        for gasto, c in values:
            total_gasto += gasto
            count += c
        yield persona, (total_gasto, count)

    def reducer(self, persona, values):
        total_gasto, count = 0, 0
        for gasto, c in values:
            total_gasto += gasto
            count += c

        # Redondear el último valor a un número entero
        rounded_value = round(total_gasto / count)

        # Convertir a cadena antes de emitir
        yield persona, str(rounded_value)

if __name__ == '__main__':
    MediaGastadoPersonaTienda.run()

